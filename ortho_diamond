#!perl

# NOTE: orthofinder now has a flag for using diamond and this script 
#       should not be necessary to use diamond with orthofinder

# Copyright (C) 2018; Joseph F. Ryan <joseph.ryan@whitney.ufl.edu>
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# for more info see <http://www.gnu.org/licenses/>

use strict;
use warnings;
use Data::Dumper;
use Getopt::Long;

our $VERSION = 0.01;

# TODO 
# INTEGRATE GETOPT::LONG
# ADD --chunks --threads --name --dir
# IF CHUNKS (mkdir $name; create 1.sh 2.sh ... $chunks.sh)

our $EVALUE = 0.001;

MAIN: {
    my $dir = $ARGV[0] or die "usage: $0 DIRECTORY OUTFILE_NAME\n";
    my $outfile_name = $ARGV[1] or die "usage: $0 DIRECTORY OUTFILE_ NAME\n";
    my $ra_files = get_fa_files($dir);
    make_diamond_dbs($dir,$ra_files);
    print_blast_cmds($dir,$ra_files,$outfile_name);
}

sub print_blast_cmds {
    my $dir      = shift;
    my $ra_files = shift;
    my $outfile_name  = shift;
    open OUT, ">$outfile_name" or die "cannot open >$outfile_name:$!";
    foreach my $qu (@{$ra_files}) {
        $qu =~ m/Species(\d+).fa/ or die "unexpected file: $qu";
        my $qu_num = $1; 
        foreach my $db (@{$ra_files}) {
            $db =~ m/Species(\d+).fa/ or die "unexpected file: $db";
            my $db_num = $1; 
            print OUT "diamond blastp -d $dir/BlastDBSpecies${db_num} -q $dir/$qu -o $dir/Blast${qu_num}_${db_num}.txt -e $EVALUE -p 1 -f 6 > $dir/Blast${qu_num}_${db_num}.stdout 2> $dir/Blast${qu_num}_${db_num}.err\n";
        }
    }
}

sub make_diamond_dbs {
    my $dir = shift;
    my $ra_files = shift;
    foreach my $file (@{$ra_files}) {
        $file =~ m/(Species\d+).fa/ or die "unexpected file: $file";
        my $dbname = 'BlastDB' . $1;
        system "diamond makedb --in $dir/$file -d $dir/$dbname\n";
    }
}

sub get_fa_files {
    my $dir = shift;
    opendir(my $dh, $dir) || die "cannot opendir $dir $!";
    my @files = grep { /fa$/ } readdir($dh);
    return \@files;
}

__END__

=head1 NAME

B<ortho_diamond> - replace blast with diamond in a orthofinder pipeline

=head1 AUTHOR

Joseph F. Ryan <joseph.ryan@whitney.ufl.edu>

=head1 SYNOPSIS

ortho_diamond DIRECTORY OUTFILE_NAME

=head1 BUGS

Please report them to the author

=head1 COPYRIGHT

Copyright (C) 2017,2018; Joseph F. Ryan

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
